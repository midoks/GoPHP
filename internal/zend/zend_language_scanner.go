// Code generated by re2c 2.2, DO NOT EDIT.
package main

import (
	"fmt"
)

//STATE
const (
	ST_IN_SCRIPTING = iota
)

//TOKEN
const (
	T_EXIT = iota
)

func main(){
	lex_scan("<?php exit;?>")
}

func YYDEBUG(s int64, c byte){
	fmt.Println(s,c)
}

func lex_scan(zendlval string){

var token int
var offset int
var cursor int
count := 0

restart:
	SCNG(yy_text) = YYCURSOR;


{
	var yych byte
	goto yyc_ST_IN_SCRIPTING
/* *********************************** */
yyc_ST_IN_SCRIPTING:
	YYDEBUG(0, *YYCURSOR)
	yych = zendlval[cursor]
	if (yych == 'E') {
		goto yy3
	}
	if (yych == 'e') {
		goto yy3
	}
yy2:
	YYDEBUG(2, zendlval[cursor]())
yy3:
	YYDEBUG(3, zendlval[cursor]())
	cursor += 1
	yych = zendlval[cursor]
	if (yych == 'X') {
		goto yy4
	}
	if (yych != 'x') {
		goto yy2
	}
yy4:
	YYDEBUG(4, zendlval[cursor]())
	cursor += 1
	yych = zendlval[cursor]
	if (yych == 'I') {
		goto yy5
	}
	if (yych != 'i') {
		goto yy2
	}
yy5:
	YYDEBUG(5, zendlval[cursor]())
	cursor += 1
	yych = zendlval[cursor]
	if (yych == 'T') {
		goto yy6
	}
	if (yych != 't') {
		goto yy2
	}
yy6:
	YYDEBUG(6, zendlval[cursor]())
	cursor += 1
	YYDEBUG(7, zendlval[cursor]())
	yyleng = YYCURSOR - SCNG(yy_text);
	{
	fmt.Println(YYCURSOR)
	go restart
}
}

}